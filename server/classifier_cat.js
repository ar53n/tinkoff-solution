// используем chatGpt вместо этого
"use strict";
const natural = require("natural");

const porterStemmer = natural.PorterStemmerRu;
const classifier = new natural.BayesClassifier(porterStemmer);
classifier.addDocument(
  [
    "бензин",
    "мойка",
    "ремонт",
    "запчасти",
    "масло", "бензин",
    "страховка",
    "стоянка",
    "техосмотр",
    "налоги",
    "штрафы",
    "парковка",
  ],
  "автомобиль"
);

// Бизнес (налоги, зарплата, реклама, офис и канцелярия, услуги)
const businessExpenses = [
  "налоги",
  "зарплата",
  "реклама",
  "офис и канцелярия",
  "услуги",
  "дивиденд",
  "купоны",
];
classifier.addDocument(businessExpenses, "бизнес");

// Благотворительность, помощь, подарки
const charityExpenses = ["благотворительность", "помощь", "подарки"];
classifier.addDocument(charityExpenses, "благотворительность");

// Бытовая техника, компьютер, расходные материалы
const householdExpenses = [
  "бытовая техника",
  "компьютер",
  "расходные материалы",
];

classifier.addDocument(householdExpenses, "бытовая техника");

// Дети (одежда, питание, игрушки, книги, няня, мебель, услуги, развлечения)
const childrenExpenses = [
  "одежда",
  "питание",
  "игрушки",
  "книги",
  "няня",
  "мебель",
  "услуги",
  "развлечения",
];
classifier.addDocument(childrenExpenses, "дети");

// Домашние животные (питание, товары для животных, услуги ветеринара)
const petExpenses = ["питание", "товары для животных", "услуги ветеринара"];

classifier.addDocument(petExpenses, "домашние животные");

const healthExpenses = [
  "косметика",
  "парфюмерия",
  "салоны красоты",
  "спорт",
  "лекарства",
  "услуги",
  "духи",
];

classifier.addDocument(healthExpenses, "здоровье и красота");

// Ипотека, долги, кредиты
classifier.addDocument(
  [
    "выплата по кредиту",
    "выплата по ипотеке",
    "досрочное гашение долга",
    "покрытие процентов",
  ],
  "ипотека, долги, кредиты"
);
// Квартира и связь
classifier.addDocument(
  [
    "электричество",
    "вода",
    "тепло",
    "газ",
    "радио",
    "телефон",
    "интернет",
    "аренда",
    "вывоз мусора",
    "кабельное телевидение",
    "охрана",
    "консьерж",
  ],
  "квартира и связь"
);

// Налоги и страхование
classifier.addDocument(["налоги", "страхование"], "налоги и страхование");

// Образование
classifier.addDocument(
  ["учебники", "канцтовары", "плата за обучение", "репетитор"],
  "образование"
);

// Отдых и развлечение (игры, фильмы, книги, диски, журналы, кафе и рестораны, кино, фото, театр, выставки, боулинг)
classifier.addDocument(
  [
    "игры",
    "фильмы",
    "книги",
    "диски",
    "журналы",
    "кафе и рестораны",
    "кино",
    "фото",
    "театр",
    "выставки",
    "боулинг",
  ],
  "Отдых и развлечение "
);

// Отдых и развлечение (игры, фильмы, книги, диски, журналы, кафе и рестораны, кино, фото, театр, выставки, боулинг)
classifier.addDocument(
  [
    "белье",
    "мелкая техника",
    "инструменты",
    "посуда",
    "кухонная утварь",
    "товары для ванной",
    "предметы интерьера",
  ],
  "Товары для дома "
);

classifier.addDocument(
  ["автобус", "проездные", "авиа", "метро", "такси", "электричка"],
  "Транспорт"
);

classifier.addDocument(
  [
    "основные продукты",
    "деликатесы",
    "алкоголь",
    "еда на работе",
    "школьные завтраки",
    "хлеб",
    "продукт",
    "десерт",
    "торт"
  ],
  "питание"
);

classifier.train();

module.exports = {
  classCat: classifier,
};
